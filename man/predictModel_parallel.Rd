% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predictModel_parallel.R
\name{predictModel_parallel}
\alias{predictModel_parallel}
\title{Training and prediction with single model or base ensemble models using paralleling computing}
\usage{
predictModel_parallel(
  Y,
  X,
  base_model,
  cvControl = list(),
  method = "method.NNLS",
  number_cores,
  seed = 1,
  ...
)
}
\arguments{
\item{Y}{the independence, like certain environmental pollutants(eg. PM2.5) in training data that we
want to predict}

\item{X}{the other predictors(eg. temp, wind speed) in training data that we
want to use to predict air pollutants}

\item{base_model}{character string in format of "SL.xgboost","SL.randomForest"}

\item{cvControl}{a list for the control of cross validation, default with 10-fold random selection validRows}

\item{method}{the method of ensemble the base models, "method.NNLS" (the default).
more details see Superlearner}

\item{number_cores}{the number of CPU cores used in parallel computing}

\item{seed}{set the numeric seed number,eg. 1234}

\item{...}{other parameters that belong to 'SuperLearner' package}
}
\value{
a list including:
basemodel: the name of base models
model_summary: the summary of base models
R2_CV:R-squire
RMSE_CV:RMSE
base_ensemble_value: the comparison results for base models
number_cores: the CPU core
Z_matrix: the cross validation results for each base model(Z matrix)
time: the modeling time
}
\description{
Training the ensemble models with paralleling computing and make prediction using new data set
}
\examples{
\dontrun{
# Let's predict the PM2.5 values with machine learming methods

# Splitting training set into two parts based on outcome: 80\% and 20\%
set.seed(1234)
data("envir_example")
size <-
  caret::createDataPartition(y = envir_example$PM2.5, p = 0.8, list = FALSE)
trainset <- envir_example[size, ]
testset <- envir_example[-size, ]

# set the predictor "PM2.5" and dependence variables
y <- c("PM2.5")
x <- colnames(envir_example[-c(1, 6)]) # except "date" and "PM2.5"

## conduct the spatial CV

# Create a list with 7 folds, each with index of rows to be considered

indices <-
  CAST::CreateSpacetimeFolds(trainset, spacevar = "code", k = 7)

# Rows of validation set on each fold

v_raw <- indices$indexOut

names(v_raw) <- seq(1:7)

pred_m3 <- predictModel_parallel(
  Y = trainset[, y],
  X = trainset[, x],
  base_model = c("SL.xgboost", ranger),
  cvControl = list(V = length(v_raw), validRows = v_raw),
  number_cores = 4,
  seed = 1
)
## when number_cores is missing, it will indicate user to set one based on
## the operation system.
}
}
