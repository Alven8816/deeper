% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CV.stack_ensemble_parallel.R
\name{CV.stack_ensemble_parallel}
\alias{CV.stack_ensemble_parallel}
\title{DEML framework with multiple meta machine learning models}
\usage{
CV.stack_ensemble_parallel(
  object,
  Y,
  X,
  meta_model = c("SL.ranger", "SL.glmnet"),
  method = "method.NNLS",
  original_feature = FALSE,
  cvControl = list(),
  number_cores,
  ...
)
}
\arguments{
\item{object}{the object that predictModel function created}

\item{Y}{the dependence, like certain environmental pollutants(eg. PM2.5) in training data that we
want to predict}

\item{X}{optional when 'original_feature = FALSE', the predictors
(eg. temp, wind speed) in training data that we
  want to use to integrate the original feature into the meta model}

\item{meta_model}{character string in format of "SL.xgboost","SL.randomForest"
as the stack ensemble models}

\item{method}{the method of ensemble the base models, "method.NNLS" (the default).}

\item{original_feature}{a Boolean value, whether integrate the original feature
into the meta model to build the stack ensemble models.}

\item{cvControl}{the control of cross validation, default with 10-fold random CV}

\item{number_cores}{the number of CPU cores used in parallel computing}

\item{...}{other parameters that belong to 'SuperLearner' package}
}
\value{
a list with components:
the information about base model;
the information about meta model;
the R-squire and RMSE for each fold in DEML model
}
\description{
Constrict the multiple meta machine learning models
}
\examples{
\dontrun{
# Let's predict the PM2.5 values with machine learming methods

# Splitting training set into two parts based on outcome: 80\% and 20\%
set.seed(1234)
data("envir_example")
size <-
  caret::createDataPartition(y = envir_example$PM2.5, p = 0.8, list = FALSE)
trainset <- envir_example[size, ]
testset <- envir_example[-size, ]

# set the predictor "PM2.5" and dependence variables
y <- c("PM2.5")
x <- colnames(envir_example[-c(1, 6)]) # except "date" and "PM2.5"

pred_stack_cv_1 <- CV.stack_ensemble_parallel(
  object = pred_m2,
  Y = trainset[, y],
  X = trainset[, x],
  meta_model = c("SL.xgboost", "SL.ranger"),
  original_feature = TRUE,
  number_cores = 4
)
}
}
