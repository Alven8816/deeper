% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stack_ensemble_parallel.R
\name{stack_ensemble_parallel}
\alias{stack_ensemble_parallel}
\title{DEML model with multiple meta machine learning models using paralleling computing}
\usage{
stack_ensemble_parallel(
  object,
  Y,
  X,
  meta_model = c("SL.ranger", "SL.glmnet"),
  method = "method.NNLS",
  original_feature = FALSE,
  cvControl = list(),
  number_cores,
  seed = 1,
  ...
)
}
\arguments{
\item{object}{the object that predictModel_parallel function created}

\item{Y}{the independence, like certain environmental pollutants(eg. PM2.5) in training data that we
want to predict}

\item{X}{optional when 'original_feature = FALSE', the predictors(eg. temp, wind speed) in training data that we
want to use to integrate the original feature into the meta model.}

\item{meta_model}{character string in format of "SL.xgboost","SL.randomForest"
as the meta ensemble models}

\item{method}{the method of ensemble the base models, "method.NNLS" (the default).}

\item{original_feature}{a Boolean value, whether integrate the original feature
into the meta model to build the DEML models.}

\item{cvControl}{the control of cross validation, default with 10-fold random CV}

\item{number_cores}{the number of CPU cores used in parallel computing}

\item{seed}{set the numeric seed number,eg. 1234}

\item{...}{other parameters that belong to 'SuperLearner' package}
}
\value{
a list with components:
the information about base model;
the information about meta model;
the double stack ensemble model assessment(R-squire and RMSE)
}
\description{
DEML model with multiple meta machine learning models using paralleling computing
}
\examples{
\dontrun{
# Let's predict the PM2.5 values with machine learning methods

# Splitting training set into two parts based on outcome: 80\% and 20\%
set.seed(1234)
data("envir_example")
size <-
  caret::createDataPartition(y = envir_example$PM2.5, p = 0.8, list = FALSE)
trainset <- envir_example[size, ]
testset <- envir_example[-size, ]

# set the predictor "PM2.5" and dependence variables
y <- c("PM2.5")
x <- colnames(envir_example[-c(1, 6)]) # except "date" and "PM2.5"

# Do not include original feature
pred_stack_9 <-
  stack_ensemble_parallel(
    object = pred_m3,
    Y = trainset[, y],
    meta_model = c("SL.ranger", "SL.xgboost", "SL.glm"),
    original_feature = FALSE,
    number_cores = 4
  )
pred_stack_9_new <-
  predict(object = pred_stack_9, newX = testset[, x])
}
}
